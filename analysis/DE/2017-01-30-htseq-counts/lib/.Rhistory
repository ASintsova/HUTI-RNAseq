write.csv(bDF, file=paste0(dat,"CC.Fisher.elim.Table.csv") )
}
dat = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/data/"
fig = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/figures/"
myDat = read.csv(file=paste0(dat,"DE-seq-results-all-core-edited.csv"), row.names=1, stringsAsFactors=F)
head(myDat)
topup <- head(myDat[order(myDat$log2FoldChange, decreasing = TRUE),], 25)
topup
write.csv(topup, paste0(dat, "top-upregulated-genes.csv"))
topdown<- head(myDat[order(myDat$log2FoldChange),], 25)
topdown
topdown<- head(myDat[order(myDat$log2FoldChange),], 50)
topdown
topdown
dat = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-16-GO-analysis/data/"
goDat <- read.csv(file=paste0(dat, "gene_association.ecocyc.csv"), row.names=1, stringsAsFactors=F) # 19361
head(goDat)
goBP <- goDat2[which(goDat2$category == "P"),]
head(goBP)
BPterms <- unique(goBP$GO)  # 1006
head(BPterms)
library(topGO)
library("org.EcK12.eg.db")
myDat <- read.csv(file=paste0(dat,"DE-seq-results-all-core-edited.csv"), row.names=1, stringsAsFactors=F)
goDat <- read.csv(file=paste0(dat, "generegulation_tmp.txt"), row.names=1, stringsAsFactors=F) # 19361
dat = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/data/"
goDat <- read.csv(file=paste0(dat, "generegulation_tmp.txt"), row.names=1, stringsAsFactors=F) # 19361
goDat <- read.csv(file=paste0(dat, "generegulation_tmp.txt"), stringsAsFactors=F) # 19361
head(goDat)
goDat <- read.csv(file=paste0(dat, "generegulation_tmp.txt"), stringsAsFactors=F, sep = "\t") # 19361
head(goDat)
goDat <- read.csv(file=paste0(dat, "generegulation_tmp.txt"), header = FALSE, stringsAsFactors=F, sep = "\t") # 19361
head(goDat)
colnames(goDat) <- ("gene_id", "reg_sym", "protein_id", "protein", "mod", "Pi", "reg_id", "gene_sym", "action")
colnames(goDat) <- c("gene_id", "reg_sym", "protein_id", "protein", "mod", "Pi", "reg_id", "gene_sym", "action")
colnames(goDat) <- c("gene_id", "reg_sym", "protein_id", "protein", "mod", "Pi", "reg_id", "gene_sym", "action")
head(goDat)
myDat <- read.csv(file=paste0(dat,"DE-seq-results-all-core-edited.csv"), row.names=1, stringsAsFactors=F)
toRM <- union(which(myDat$sym == "") , which(is.na(myDat$sym)))
myDat1 <- myDat[-toRM,]
iFCok1 <- which( abs(myDat1$log2FoldChange) > 1.5)    # 753
iFCok2 <- which( abs(myDat1$log2FoldChange) > 0.585)  # 1658
iFDRok <- which(myDat1$padj < 0.05)           # 1763
iDE <- intersect(iFDRok,iFCok1)
geneNam <- as.vector(myDat1$sym) # 2457
DEgeneNam <- as.vector(myDat1$sym[iDE]) # 752
geneNam2 <- geneNam[which(geneNam %in% goDat$Symbol)] # 1804
DEgeneNam2 <- DEgeneNam[which(DEgeneNam %in% goDat$Symbol)]  # 565
goDat2 <- goDat[which(goDat$gene_sym %in% geneNam2),]   # 11149
dim(goDat2)
geneNam2
geneName
genNam
head(myDat)
geneNam <- as.vector(myDat1$sym) # 2457
geneNam
DEgeneNam <- as.vector(myDat1$sym[iDE]) # 752
geneNam2 <- geneNam[which(geneNam %in% goDat$Symbol)] # 1804
geneNam2
head(goDat)
geneNam2 <- geneNam[which(geneNam %in% goDat$gene_sym)] # 1804
length(geneNam2)
length(geneNam)
length(goDat$gene_sym)
DEgeneNam2 <- DEgeneNam[which(DEgeneNam %in% goDat$gene_sym)]  # 565
DEgeneNam2
goDat2 <- goDat[which(goDat$gene_sym %in% geneNam2),]   # 11149
dim(goDat)
dim(goDat2)
EcoliGenes <- rep(0,length(geneNam2))
EcoliGenes[which(geneNam2 %in% DEgeneNam2  )] <- 1
names(EcoliGenes) <- geneNam2
DEcoli <- names(EcoliGenes)[which(EcoliGenes == 1)]
FacGenes <- as.factor(EcoliGenes)
head(goDat2)
goRegAct <- goDat2[which(goDat2$action == "activator"),]
goRegAct
goRegRep <- goDat2[which(goDat2$action == "repressor"),]
dim(goRegRep)
RegActterms <- unique(goRegAct$reg_sym)  # 1006
RegRepterms <- unique(goRegRep$reg_sym)  # 1121
dim(RegActterms)
head(goRegAct$reg_sym)
head(unique(goRegAct$reg_sym))
RegActterms <- unique(goRegAct$reg_sym)  # 1006
RegActterms
RegRepterms <- unique(goRegRep$reg_sym)  # 1121
length(RegActterms)
Actlist <- list()
for(ii in 1:length(RegActterms)) {
term <- RegActterms[ii]
genes <- unique(goRegAct$gene_sym[which(goRegAct$reg_sym == term)])
BPlist[[ii]] <-  genes
}
names(Actlist) <- RegActterms
Actlist <- list()
for(ii in 1:length(RegActterms)) {
term <- RegActterms[ii]
print(term)
genes <- unique(goRegAct$gene_sym[which(goRegAct$reg_sym == term)])
print(genes)
Actlist[[ii]] <-  genes
}
names(Actlist) <- RegActterms
Actlist
Replist <- list()
for(ii in 1:length(goRegRep)) {
term <- RegRepterms[ii]
genes <- unique(goRegRep$gene_sym[which(goRegRep$reg_sym == term)])
Replist[[ii]] <-  genes
}
names(Replist) <- RegRepterms
Replist <- list()
for(ii in 1:length(RegRepterms)) {
term <- RegRepterms[ii]
genes <- unique(goRegRep$gene_sym[which(goRegRep$reg_sym == term)])
Replist[[ii]] <-  genes
}
names(Replist) <- RegRepterms
Replist
topAct <- new("topGOdata", description = "Ecoli Activators", ontology = "Regulons", allGenes = FacGenes,  nodeSize = 1, annot = annFUN.GO2genes, GO2genes = Actlist)
library(topGO)
topAct <- new("topGOdata", description = "Ecoli Activators", ontology = "Regulons", allGenes = FacGenes,  nodeSize = 1, annot = annFUN.GO2genes, GO2genes = Actlist)
topAct <- new("topGOdata", description = "Ecoli Activators",  allGenes = FacGenes,  nodeSize = 1, annot = annFUN.GO2genes, GO2genes = Actlist)
topAct <- new("topGOdata", description = "Ecoli Activators", ontology = "BP" allGenes = FacGenes,  nodeSize = 1, annot = annFUN.GO2genes, GO2genes = Actlist)
topAct <- new("topGOdata", description = "Ecoli Activators", ontology = "BP", allGenes = FacGenes,  nodeSize = 1, annot = annFUN.GO2genes, GO2genes = Actlist)
topGOdata
?`topGOdata-class`
dat = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/data/"
fig = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/figures/"
myDat = read.csv(file=paste0(dat,"DE-seq-results-all-core-edited.csv"), row.names=1, stringsAsFactors=F)
head(myDat)
dim(myDat)
counts = read.csv(file=paste0(dat,"normalized_counts_core.csv"), row.names=1, stringsAsFactors=F)
head(counts)
dim(counts)
counts_sym <- merge(counts, myDat$sym, by= "row.names", all.x = TRUE)
head(counts_sym)
myDat$sym
counts_sym <- merge(counts, myDat, by= "row.names", all.x = TRUE)
head(counts_sym)
length(counts_sym$sym)
length(unique(counts_sym$sym))
counts2 <- counts2[,c(2:28,30,35)]
counts2 <- counts_sym[,c(2:28,30,35)]
head(counts2)
counts2 <- counts_sym[,c(2:28,31,34)]
head(counts2)
counts2 <- counts_sym[,c(2:27,29,34)]
head(counts2)
dat = "/Users/annasintsova/git_repos/HUTI-RNAseq/analysis/non-core/data/"
fig = "/Users/annasintsova/git_repos/HUTI-RNAseq/analysis/non-core/figures/"
counts <- read.csv(paste0(dat, "2017-02-01-combined_counts.csv"), row.names = 1)
strain_names <- c("UR1", "UTI1", "UR2", "UTI2", "UR3", "UTI3", "UR4", "UTI4", "UR5", "UTI5", "UR6", "UTI6", "UR7", "UTI7",
"UR8", "UTI8", "UR9", "UTI9", "UR10", "UTI10", "UR11", "UTI11", "UR12", "UTI12")
exp_info <- read.csv(paste0(dat, "non-core-exp-info.csv"), row.names = 1)
cmb.sig.genes <- data.frame()
dat = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/data/"
fig = "~/git_repos/HUTI-RNAseq/analysis/DE/2017-06-19-exploration/figures/"
myDat = read.csv(file=paste0(dat,"DE-seq-results-all-core-edited.csv"), row.names=1, stringsAsFactors=F)
counts = read.csv(file=paste0(dat,"normalized_counts_core.csv"), row.names=1, stringsAsFactors=F)
counts_sym <- merge(counts, myDat, by= "row.names", all.x = TRUE)
counts2 <- counts_sym[,c(2:27,29,34)]
gluconate <- c("gntU", "gntK", "gntR")
library(pheatmap)
head(counts2)
gluc_counts <- counts2[which(counts2$sym) %in% gluconate,]
gluc_counts <- counts2[which(counts2$sym %in% gluconate),]
gluc_counts
gluc_counts <- log2(gluc_counts[,1:26] +1)
gluc_counts <- counts2[which(counts2$sym %in% gluconate),]
names <- gluc_counts$sym
gluc_counts <- log2(gluc_counts[,1:26] +1)
rownames(gluc_counts)<- names
gluc_counts
pheatmap(gluc_counts)
pheatmap(gluc_counts, cellheight = 15, cellwidth = 15,)
pheatmap(gluc_counts, cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(gluc_counts, cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
info <- read.csv(file=paste0(dat,"Patient_meta_info.csv"), row.names=1)
info
annot <- info[,c(2,3)]
pheatmap(gluc_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
info
annot <- info[,c(5,3)]
pheatmap(gluc_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
annot <- info[,c(3,5)]
pheatmap(gluc_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
annot
annot <- info[,c(2,5)]
pheatmap(gluc_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
biotin <- c("bioB", "bioC", "bioD","bioF")
biotin_counts <- counts2[which(counts2$sym %in% biotin),]
names <- biotin_counts$sym
names
biotin_counts <- log2(biotin_counts[,1:26] +1)
rownames(biotin_counts)<- names
pheatmap(biotin_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
head(counts2)
c(1:26,2)
c(1:26:2)
seq(1:26:2)
seq(1:26,2)
?seq
seq(1,26,2)
?cbind
counts3 <- cbind(counts2[,seq(1,26,2)], counts2[,seq(2,26,2)])
head(counts3)
counts3 <- cbind(counts2[,seq(1,26,2)], counts2[,seq(2,26,2)], counts2$sym)
head(counts3)
rownames(counts3)<rownames(counts2)
rownames(counts3)<-rownames(counts2)
head(counts3)
counts3 <- cbind(counts2[,seq(1,26,2)], counts2[,c(seq(2,26,2),27)])
rownames(counts3)<-rownames(counts2)
head(counts3)
head(counts2)
counts3 <- cbind(counts2[,seq(1,26,2)], counts2[,c(seq(2,26,2),28)])
rownames(counts3)<-rownames(counts2)
head(counts3)
biotin_counts <- counts3[which(counts3$sym %in% biotin),]
names <- biotin_counts$sym
names
biotin_counts <- log2(biotin_counts[,1:26] +1)
rownames(biotin_counts)<- names
pheatmap(biotin_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
pheatmap(biotin_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
biotin_counts
annot
biotin_counts
ggplot(DS0012, aes(x = gender, y = BMI, fill = gender)) + geom_boxplot() +
facet_wrap(~ age.category, ncol = 5)
library(ggplot2)
ggplot(DS0012, aes(x = gender, y = BMI, fill = gender)) + geom_boxplot() +
facet_wrap(~ age.category, ncol = 5)
biotinData<-t(biotin_counts)
biotinData
info
biotinData
biotin_counts
for (i in range(1:nrow(biotin_counts))){
print(biotin_counts[i,])
}
t(biotin_counts)
?data.frame
rep(rownames(biotin_counts), 4)
rep(rownames(t(biotin_counts)), 4)
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData
biotinData$gene <- c(rep("bioB", 26), rep("bioC", 26), rep("bioD", 26), rep("bioF", 26))
biotinData
biotinData <- data.frame()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData
biotinData <- matrix()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$gene <- c(rep("bioB", 26), rep("bioC", 26), rep("bioD", 26), rep("bioF", 26))
biotinData
biotinData <- as.dataframe(biotinData)
biotinData <- as.data.frame(biotinData)
biotinData
biotin_counts
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(biotin_counts)
biotinData
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData
biotinData$counts<- c(biotin_counts)
biotinData
biotin_counts
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(biotin_counts[1, ], biotin_counts[2,], biotin_counts[3,],
biotin_counts[4,])
biotinData
biotin_counts[1, ]
c(biotin_counts[1,])
as.vector(biotin_counts[1, ], biotin_counts[2,], biotin_counts[3,],
biotin_counts[4,])
as.numeric(biotin_counts[1,])
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinDat
biotinData
biotinData <- as.data.frame(biotinData)
biotinData
biotin_counts
library(ggplot2)
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$media <- rep(c(rep("UR", 13), rep("UTI", 13)),4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinData <- as.data.frame(biotinData)
biotinData
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot() +
facet_wrap(~ gene.category, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot()
?facet_wrap
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot() +
facet_wrap(~ gene.category)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot() +
facet_wrap(~ gene)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot() +
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +geom_jitter(position=position_jitter(width=.1, height=0)+
facet_wrap(~ gene, ncol = 4)
f
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = id)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media), colour = id) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0), color = id)+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0), color = id)+geom_point(colour = id)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0), color = "id")+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media, colour=factor(id))) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
d
ggplot(biotinData, aes(x = media, y = counts, fill = media)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
biotinData
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$strain <- rep(info$STRAIN,8)
biotinData$media <- rep(c(rep("UR", 13), rep("UTI", 13)),4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinData <- as.data.frame(biotinData)
head(biotinData)
info$STRAIN
levels(info$STRAIN)
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$strain <- rep(levels(info$STRAIN),8)
biotinData$media <- rep(c(rep("UR", 13), rep("UTI", 13)),4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinData <- as.data.frame(biotinData)
head(biotinData)
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData
biotinData <- list()
biotinData$id <- rep(rownames(t(biotin_counts)), 4)
biotinData$strain <- rep(c("HM1", "HM3", "HM6", "HM7", "HM14", "HM17", "HM43",
"HM54", "HM56", "HM57", "HM66", "HM68", "HM86"), 4)
biotinData$media <- rep(c(rep("UR", 13), rep("UTI", 13)),4)
biotinData$gene <- c(rep("bioB", 26), rep("bioF", 26), rep("bioC", 26), rep("bioD", 26))
biotinData$counts<- c(as.numeric(biotin_counts[1, ]), as.numeric(biotin_counts[2,]),as.numeric(biotin_counts[3,]),
as.numeric(biotin_counts[4,]))
biotinData <- as.data.frame(biotinData)
head(biotinData)
ggplot(biotinData, aes(x = media, y = counts, fill = media, colour=strain)) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = media), color = strain) + geom_boxplot(outlier.shape=NA) +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, fill = strain))  +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, color = strain))  +
geom_jitter(position=position_jitter(width=.1, height=0))+
facet_wrap(~ gene, ncol = 4)
ggplot(biotinData, aes(x = media, y = counts, color = strain))  +
geom_jitter(position=position_jitter(width=.1, height=0))+
geom_line(aes(group = strain,
alpha = 0.5, colour = "darkgrey")+
facet_wrap(~ gene, ncol = 4)
d
ggplot(biotinData, aes(x = media, y = counts, color = strain))  +
geom_jitter(position=position_jitter(width=.1, height=0))+
geom_line(aes(group = strain),
alpha = 0.5, colour = "darkgrey")+
facet_wrap(~ gene, ncol = 4)
glycogen <- c("glgA", "glgC", "glgP")
biotin <- c("bioB", "bioC", "bioD","bioF")
glycogen_counts <- counts3[which(counts3$sym %in% glycogen),]
glycogen_counts
names <- glycogen_counts$sym
glycogen_counts <- log2(glycogen_counts[,1:26] +1)
rownames(glycogen_counts)<- names
pheatmap(glycogen_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(glycogen_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
pheatmap(glycogen_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE", "secG", "secE")
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
names
names <- curli_counts$sym
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE")
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE", "bssR", "bssS",
"glgS", "rpoS", "bolA")
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE", "bssR",
"glgS", "rpoS", "bolA")
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE", "bssR",
"glgS", "rpoS", "bolA", "glgS")
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
curli <- c("csgA", "csgB", "csgF", "csgG", "csgE", "bssR",
"glgS", "rpoS", "bolA")
curli <- c("wzb", "wza")
curli
curli_counts <- counts3[which(counts3$sym %in% curli),]
names <- curli_counts$sym
names
curli_counts <- log2(curli_counts[,1:26] +1)
rownames(curli_counts)<- names
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(curli_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
stress <- c("rpoS", "hdeA", "cspD", "yhcJ", "tnaB")
stress <- c("rpoS", "hdeA", "cspD", "yhcJ", "tnaB")
stress_counts <- counts3[which(counts3$sym %in% stress),]
names <- stress_counts$sym
names
stress_counts <- log2(stress_counts[,1:26] +1)
rownames(stress_counts)<- names
pheatmap(stress_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
stress <- c("rpoS", "hdeA", "cspD", "yhcJ", "tnaB", "yjiY")
stress_counts <- counts3[which(counts3$sym %in% stress),]
names <- stress_counts$sym
stress_counts <- log2(stress_counts[,1:26] +1)
rownames(stress_counts)<- names
pheatmap(stress_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
stress <- c("rpoS", "hdeA", "cspD", "yhcJ", "tnaB")
stress_counts <- counts3[which(counts3$sym %in% stress),]
names <- stress_counts$sym
stress_counts <- log2(stress_counts[,1:26] +1)
rownames(stress_counts)<- names
pheatmap(stress_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
stress <- c("rpoS", "hdeA", "cspD", "yhcJ", "tnaB", "yjiY")
stress_counts <- counts3[which(counts3$sym %in% stress),]
names <- stress_counts$sym
stress_counts <- log2(stress_counts[,1:26] +1)
rownames(stress_counts)<- names
pheatmap(stress_counts, annotation_col = annot,cellheight = 15, cellwidth = 15,
cluster_rows = FALSE)
